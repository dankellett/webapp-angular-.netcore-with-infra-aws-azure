# trigger:
#   branches:
#     include:
#     - master
#   paths:
#     exclude:
#     - Terraform/*
#     - AzurePipelines/*

pool:
  vmImage: 'windows-latest'

variables:
  projects: '**/*.csproj'
  testProjects: '**/*Tests/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(projects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(projects)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(testProjects)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(buildConfiguration) --output "$(build.artifactstagingdirectory)"'

- task: pekspro.pekspro-efcore-migration-script-generator.efcore-migration-script-generator.efcore-migration-script-generator-task@0
  displayName: 'Generate Migration Scripts'
  inputs:
    projectpath: 'app-template.csproj'
    databasecontexts: |
     AppDbContext
     
    installdependencies: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

